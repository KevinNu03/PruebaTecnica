// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using DalEstudiantes.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace DalEstudiantes.Models
{
    public partial class EstudiantesContext
    {
        private IEstudiantesContextProcedures _procedures;

        public virtual IEstudiantesContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new EstudiantesContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IEstudiantesContextProcedures GetProcedures()
        {
            return Procedures;
        }
    }

    public partial class EstudiantesContextProcedures : IEstudiantesContextProcedures
    {
        private readonly EstudiantesContext _context;

        public EstudiantesContextProcedures(EstudiantesContext context)
        {
            _context = context;
        }

        public virtual async Task<List<SpIniciarSesionResult>> SpIniciarSesionAsync(string identificacion, string contrasena, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "Identificacion",
                    Size = 15,
                    Value = identificacion ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "Contrasena",
                    Size = 500,
                    Value = contrasena ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<SpIniciarSesionResult>("EXEC @returnValue = [dbo].[SpIniciarSesion] @Identificacion = @Identificacion, @Contrasena = @Contrasena", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<SpRegistrarEstudianteResult>> SpRegistrarEstudianteAsync(string identificacion, string nombreCompleto, string contrasena, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "Identificacion",
                    Size = 15,
                    Value = identificacion ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "NombreCompleto",
                    Size = 50,
                    Value = nombreCompleto ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "Contrasena",
                    Size = 500,
                    Value = contrasena ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<SpRegistrarEstudianteResult>("EXEC @returnValue = [dbo].[SpRegistrarEstudiante] @Identificacion = @Identificacion, @NombreCompleto = @NombreCompleto, @Contrasena = @Contrasena", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
